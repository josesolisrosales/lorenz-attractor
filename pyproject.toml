[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lorenz-attractor"
dynamic = ["version"]
description = "Professional-grade Lorenz attractor simulation suite"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Jose Solis Rosales", email = "josesolisrosales@linux.com"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Visualization",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "matplotlib>=3.5.0",
    "scipy>=1.8.0",
    "PyOpenGL>=3.1.0",
    "pygame>=2.1.0",
    "flask>=2.0.0",
    "plotly>=5.0.0",
    "opencv-python>=4.5.0",
    "numba>=0.56.0",
    "pillow>=9.0.0",
    "pandas>=1.3.0",
    "dash>=2.0.0",
    "moderngl>=5.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
]
gpu = [
    "cupy>=12.0.0",
    "cuda-python>=12.0.0",
]

[project.urls]
Homepage = "https://github.com/josesolisrosales/lorenz-attractor"
Repository = "https://github.com/josesolisrosales/lorenz-attractor"
Issues = "https://github.com/josesolisrosales/lorenz-attractor/issues"

[project.scripts]
lorenz-attractor = "lorenz_attractor.cli:main"
lorenz-web = "lorenz_attractor.web.app:main"

[tool.hatch.version]
path = "src/lorenz_attractor/__init__.py"

[tool.hatch.build.targets.sdist]
exclude = [
    "/.github",
    "/tests",
    "/.gitignore",
]

[tool.hatch.build.targets.wheel]
packages = ["src/lorenz_attractor"]

[tool.black]
target-version = ["py38"]
line-length = 88
skip-string-normalization = true

[tool.isort]
profile = "black"
known_first_party = ["lorenz_attractor"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=lorenz_attractor",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests as requiring GPU (deselect with '-m \"not gpu\"')",
]

[tool.coverage.run]
source = ["src/lorenz_attractor"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]